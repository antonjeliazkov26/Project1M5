import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class InventoryManagementSystem {

    // Product class
    static class Product {
        private String name;
        private double price;
        private int quantity;

        public Product(String name, double price, int quantity) {
            this.name = name;
            this.price = price;
            this.quantity = quantity;
        }

        public String getName() {
            return name;
        }

        public void setName(String name) {
            this.name = name;
        }

        public double getPrice() {
            return price;
        }

        public void setPrice(double price) {
            this.price = price;
        }

        public int getQuantity() {
            return quantity;
        }

        public void setQuantity(int quantity) {
            this.quantity = quantity;
        }

        public String displayProductDetails() {
            return "Name: " + name + ", Price: $" + price + ", Quantity: " + quantity;
        }
    }

    // Inventory class
    static class Inventory {
        private Product[] products;
        private int productCount;

        public Inventory() {
            products = new Product[3];  // Max 3 products
            productCount = 0;
        }

        public boolean addProduct(Product product) {
            if (productCount < 3) {
                products[productCount++] = product;
                return true;
            }
            return false; // No space available
        }

        public boolean updateProduct(String name, double price, int quantity) {
            for (int i = 0; i < productCount; i++) {
                if (products[i].getName().equalsIgnoreCase(name)) {
                    products[i].setPrice(price);
                    products[i].setQuantity(quantity);
                    return true;
                }
            }
            return false;
        }

        public String displayAllProducts() {
            if (productCount == 0) return "No products in inventory.";

            StringBuilder inventoryDetails = new StringBuilder();
            for (int i = 0; i < productCount; i++) {
                inventoryDetails.append(products[i].displayProductDetails()).append("\n");
            }
            return inventoryDetails.toString();
        }
    }

    // InventoryGUI class
    static class InventoryGUI {
        private JFrame frame;
        private JTextField nameField, priceField, quantityField;
        private JTextArea displayArea;
        private Inventory inventory;

        public InventoryGUI() {
            inventory = new Inventory();
            frame = new JFrame("Inventory Management System");
            frame.setLayout(new FlowLayout());
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            frame.setSize(400, 300);

            frame.add(new JLabel("Product Name:"));
            nameField = new JTextField(15);
            frame.add(nameField);

            frame.add(new JLabel("Price:"));
            priceField = new JTextField(10);
            frame.add(priceField);

            frame.add(new JLabel("Quantity:"));
            quantityField = new JTextField(5);
            frame.add(quantityField);

            JButton addButton = new JButton("Add Product");
            JButton updateButton = new JButton("Update Product");
            JButton displayButton = new JButton("Display Products");

            frame.add(addButton);
            frame.add(updateButton);
            frame.add(displayButton);

            displayArea = new JTextArea(10, 30);
            displayArea.setEditable(false);
            frame.add(new JScrollPane(displayArea));

            addButton.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    String name = nameField.getText();
                    try {
                        double price = Double.parseDouble(priceField.getText());
                        int quantity = Integer.parseInt(quantityField.getText());
                        Product product = new Product(name, price, quantity);
                        if (inventory.addProduct(product)) {
                            displayArea.setText("Product added successfully!");
                        } else {
                            displayArea.setText("Inventory is full!");
                        }
                    } catch (NumberFormatException ex) {
                        displayArea.setText("Invalid input. Please enter valid numbers for price and quantity.");
                    }
                    clearFields();
                }
            });

            updateButton.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    String name = nameField.getText();
                    try {
                        double price = Double.parseDouble(priceField.getText());
                        int quantity = Integer.parseInt(quantityField.getText());
                        if (inventory.updateProduct(name, price, quantity)) {
                            displayArea.setText("Product updated successfully!");
                        } else {
                            displayArea.setText("Product not found!");
                        }
                    } catch (NumberFormatException ex) {
                        displayArea.setText("Invalid input. Please enter valid numbers for price and quantity.");
                    }
                    clearFields();
                }
            });

            displayButton.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    displayArea.setText(inventory.displayAllProducts());
                }
            });

            frame.setVisible(true);
        }

        private void clearFields() {
            nameField.setText("");
            priceField.setText("");
            quantityField.setText("");
            nameField.requestFocusInWindow();
        }
    }

    // Main method
    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                new InventoryGUI();
            }
        });
    }
}
